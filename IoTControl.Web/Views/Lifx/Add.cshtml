@model IoTControl.Web.ViewModels.LifxViewModel.FavoriteEditor

@{
    ViewBag.Title = "Add LIFX Favorite";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add LIFX Favorite</h2>

@using (Html.BeginForm("Add", "Lifx", FormMethod.Post, new { @class = "form-horizontal", id = "frmLifxFavorite" }))
{
    @Html.Partial("_PartialFavoriteEditor", Model)
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
        //$(document).ready(function() {
        //    var kelvins = [2500, 2750, 3000, 3200, 3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 7500, 8000, 8500, 9000];
        //    var s = $("<select />", {
        //        id: "selectKelvin",
        //        name: "selectKelvin",
        //        css: {
        //            "color": "#000",
        //            "font-weight": "bold"
        //        },
        //        on: {
        //            change: function() {
        //                UpdateLifxJsonBody();
        //            }
        //        },
        //    });

        //    $("<option />", {
        //        value: "",
        //        text: "Select Kelvin",
        //        selected: true,
        //        css: {
        //            "color": "#000",
        //            "font-weight": "bold"
        //        },
        //        appendTo: s
        //    });

        //    for (var i = 0; i < kelvins.length; i++) {
        //        var kelvin = kelvins[i];

        //        var temperatureHex = chroma.temperature(kelvin);

        //        var optionText = kelvin + " K ";

        //        switch (kelvin) {
        //        case 2500:
        //                optionText += "(Ultra Warm)";
        //            break;
        //        case 2750:
        //            optionText += "(Incandescant)";
        //            break;
        //        case 3000:
        //            optionText += "(Warm)";
        //            break;
        //        case 3200:
        //            optionText += "(Neutral Warm)";
        //            break;
        //        case 3500:
        //            optionText += "(Neutral)";
        //            break;
        //        case 4000:
        //            optionText += "(Cool)";
        //            break;
        //        case 4500:
        //            optionText += "(Cool Daylight)";
        //            break;
        //        case 5000:
        //            optionText += "(Soft Daylight)";
        //            break;
        //        case 5500:
        //            optionText += "(Daylight)";
        //            break;
        //        case 6000:
        //            optionText += "(Noon Daylight)";
        //            break;
        //        case 6500:
        //            optionText += "(Bright Daylight)";
        //            break;
        //        case 7000:
        //            optionText += "(Cloudy Daylight)";
        //            break;
        //        case 7500:
        //            optionText += "(Blue Daylight)";
        //            break;
        //        case 8000:
        //            optionText += "(Blue Overcast)";
        //            break;
        //        case 8500:
        //            optionText += "(Blue Water)";
        //            break;
        //        case 9000:
        //            optionText += "(Blue Ice)";
        //            break;
        //        default:
        //        }


        //        $("<option />", {
        //            value: kelvin,
        //            text: optionText,
        //            css: {
        //                "background-color": temperatureHex,
        //                "color": "#000",
        //                "font-weight": "bold"
        //            },
        //            appendTo: s
        //        });

        //        $(s).appendTo("#divKelvins");
        //    }
        //});

        $("#btnGetState").click(function(e) {
            var frmData = $("#frmLifxFavorite").serialize();

            $.ajax({
                type: "POST",
                url: "@Url.Action("GetCurrentColor", "Lifx")",
                data: frmData,
                dataType: "json",
                success: function(data) {
                    $("#JsonValue").val(data);
                },
                fail: function(data) {
                    alert("Error: " + data);
                }
            });
        });

        $("#ColorPicker").spectrum({
            preferredFormat: "hsv",
            flat: true,
            showInput: true,
            change: function() {
                UpdateLifxJsonBody();
            }
        });

        $("#LifxFavoriteJson_Duration").on("change", function() {
            UpdateLifxJsonBody();
        });

        $("#LifxFavoriteJson_Power").on("change", function() {
            UpdateLifxJsonBody();
        });

        $("#Kelvin").on("change", function() {
            UpdateLifxJsonBody();
        });

        function UpdateLifxJsonBody() {
            var color = $("#ColorPicker").spectrum("get");

            var hsvColor = color.toHsv();

            var model = {
                power: $("#LifxFavoriteJson_Power").val(),
                hue: hsvColor.h,
                saturation: hsvColor.s,
                brightness: hsvColor.v,
                kelvin: $("#Kelvin").val(),
                duration: $("#LifxFavoriteJson_Duration").val()
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("GetLifxColorJson", "Lifx")",
                data: JSON.stringify(model),
                contentType: "application/json",
                dataType: "json",
                success: function(data) {
                    $("#JsonValue").val(data);
                },
                fail: function(data) {
                    alert("Error: " + data);
                }
            });
        }
</script>
}
