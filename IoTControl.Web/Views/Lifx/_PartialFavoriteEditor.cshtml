@model IoTControl.Web.ViewModels.LifxViewModel.FavoriteEditor


@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.Name, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.SelectorType, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.DropDownListFor(m => m.SelectorType, Model.SelectorTypeList, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.SelectorType)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.SelectorValue, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.SelectorValue, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.SelectorValue)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
        @Html.CheckBoxFor(m => m.PickRandom)
        @Html.LabelFor(m => m.PickRandom)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.LifxFavoriteJson.Power, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.DropDownListFor(m => m.LifxFavoriteJson.Power, Model.PowerOptionsList, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.LifxFavoriteJson.Power)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
        <button id="btnGetState" type="button" class="btn btn-primary">Get Current State</button>
    </div>
</div>
<div class="form-group">
    <div id="divColorPicker" class="col-sm-2">
        @Html.LabelFor(m => m.ColorPicker, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-5">
                <h4>For Color Bulbs</h4>
                @Html.TextBoxFor(m => m.ColorPicker, new { @class = "form-control" })
            </div>
            <div class="col-sm-5">
                <h4>For White Bulbs</h4>
                <div id="divKelvins">
                    <select id="Kelvin" name="Kelvin" class="form-control">
                        <option style="background-color: #FFF; color: #000; font-weight: bold;" value="">Select Kelvin</option>
                        @foreach (var k in Model.KelvinList)
                        {
                            <option style="background-color: @k.RgbColor; color: #000; font-weight: bold;" value="@k.Id" @(k.Id == Model.LifxFavoriteJson.Kelvin ? "selected" : "")>@k.Description</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.LifxFavoriteJson.Duration, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.LifxFavoriteJson.Duration, new { @class = "form-control", type = "number", min = "0" })
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.JsonValue, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextAreaFor(m => m.JsonValue, new { @class = "form-control", style = "height:200px;" })
        @Html.ValidationMessageFor(m => m.JsonValue)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.UserId)
        @Html.HiddenFor(x => x.CreatedOn)
        <button id="btnSaveFavorite" type="submit" class="btn btn-primary">Save Favorite</button>
    </div>
</div>
<div id="modalJsonEdit" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Manually Edit Json</h4>
            </div>
            <div class="modal-body">
                <p>Alright, so you see the JSON and you're feeling adventurous. This JSON looks really simple;
                    however, it's been artfully crafted to work with LIFX. I'm sure you don't want to break anything,
                    but who am I to judge? If you want to give it a go, click Continue.</p>
            </div>
            <div class="modal-footer">
                <button id="btnContinueJsonEdit" type="button" class="btn btn-primary" data-dismiss="modal">Continue</button>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <button id="btnCancelJsonEdit" type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>

    </div>
</div>